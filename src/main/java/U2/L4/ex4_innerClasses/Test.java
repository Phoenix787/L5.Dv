package U2.L4.ex4_innerClasses;

/**
 * Created by Ксения on 27.03.2016.
 * Вложенные классы нужны если главный класс не может обойтись без вложенного класса. Это как правило всякие
 * билдеры, настройщики. Вложенный класс будетт заниматься только главным классом и никаким другим
 * Вложенный класс можно сделать статическим, кроме того - это рекомендуется делать, так как работать с ним тогда легко
 * если вложенный класс без static - здесь начинаются сложности. Так как к нему нельзя обратиться из статического контекста
 * т. е. из статического метода (а это как раз main).
 *
 * К Inner классу нельзя обратиться не имея экземпляра внешнего класса
 */
public class Test {
    private int i1;
    private static int i2;


    //в нестатическом внутреннем классе мы можем обратиться ко всем полям внешнего класса,
    // потому что мы к моменту создания внутреннего класса будем иметь экземпляр внешнего класса
    private class Inner{
//        static int a; //внутри вложенного нестатического класса нельзя создать статическую переменную
        void test(){
            i2 = 42;
            i1 = 10;
        }

    }

    //в статическом внутреннем классе мы можем обратиться к  статической переменной внешнего класса
    //но обратиться к нестатической переменной не можем

    private static class StaticInner{
        static int a;

        void test(){
            i2 = 42;
           // i1 = 10; //не можем обратиться, так как статический класс мы можем создать даже не имея экземпляра внешнего класса
        }

    }

    public static void main(String[] args) {
        Test test = new Test();
        Test.StaticInner staticInner = new StaticInner();

        Test.Inner inner = test.new Inner(); //нам нужно создать экземпляр внутреннего нестатического класса
        //или кратко можно так
        Test.Inner inner1 = new Test().new Inner();

    }
}
